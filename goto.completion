

#have goto-tool &&
_goto-tool() {
    COMPREPLY=()
    local cur prev entries
    _get_comp_words_by_ref cur prev

	if [[ "$prev" == "list" ]]; then
		return 0;
	fi

	case $prev in
        get|add|rm)
			entries=$( goto-tool list | cut -d ":" -f 1 )
			COMPREPLY=( $( compgen -W "$entries" -- "$cur" ) )
            return 0
            ;;
    esac

	_filedir
} &&
complete -F _goto-tool goto-tool


#have goget &&
_goget() {
    COMPREPLY=()
    local cur prev entries
    _get_comp_words_by_ref -n :  cur prev words cword

	if [[ "$prev" == "goget" ]]; then
        entries=$( goto-tool list | cut -d ":" -f 1 )
        compopt +o nospace &>/dev/null
        COMPREPLY=( $( compgen -W "$entries" -- "$cur" ) )

    elif [ "${#words[@]}" -eq 3 ]; then
        # completion for the optional subdir parameter

        subdir=${cur/:-/}
        dir=$( goto-tool get "$prev" )
        dirs=$( compgen -o dirnames  "$dir/$cur" | while read comp; do
                echo ${comp#$dir/}/; done )

        COMPREPLY=( $( compgen -W "$dirs" -- "$cur" ) )
	fi

	return 0
} &&
complete -o nospace -F _goget goget


#have goto &&
_goto() {
    COMPREPLY=()
    local cur prev entries
    _get_comp_words_by_ref -n : cur prev words cword

	if [[ "$prev" == "goto" ]]; then
        # completion for goto directories

        entries=$( goto-tool list | cut -d ":" -f 1 )
        compopt +o nospace &>/dev/null
        COMPREPLY=( $( compgen -W "$entries" -- "$cur" ) )

    elif [ "${#words[@]}" -eq 3 ]; then
        # completion for the optional subdir parameter

        subdir=${cur/:-/}
        dir=$( goto-tool get "$prev" )
        dirs=$( compgen -o dirnames  "$dir/$cur" | while read comp; do
                echo ${comp#$dir/}/; done )

        COMPREPLY=( $( compgen -W "$dirs" -- "$cur" ) )
	fi
	return 0
} &&
complete -o nospace -F _goto goto



# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
