#!/usr/bin/env python

import sys
import os
from xdg.BaseDirectory import xdg_config_home


def goto_file_path():
	return os.path.join(xdg_config_home, 'goto_favourites.list')


def read_goto_file():
	path = goto_file_path()

	try:
		os.stat(path)
	except OSError:
		return {}

	smap = lambda x: map(lambda e: e.strip(), x)

	try:
		tuples = (smap(n.split(':',1)) for n in file(path, 'r').readlines())
	except IOError as e:
		fatal("Something went wrong while opening the file '%s': %s" % (
				e, path))

	return dict(tuples)


def write_goto_file(dirs):
	path = goto_file_path()

	data = "\n".join(["%s: %s" % (n) for n in dirs.items()])

	try:
		file(path, 'w').write(data)
	except IOError as e:
		fatal("Something went wrong while writing: %s" % (e))


def print_directory_by_name(dirname):
	dirs = read_goto_file()
	try:
		print dirs[dirname]
	except KeyError:
		fatal("Entry '%s' not found." % (dirname,))


def add_directory(name, path):
	dirs = read_goto_file()
	try:
		os.stat(path)
	except OSError:
		fatal('Path is not accessible: %s' % (path,))
	dirs[name] = os.path.abspath(path)
	write_goto_file(dirs)
	print "Entry '%s' added, points to '%s'." % (name, dirs[name])


def rm_directory(name):
	dirs = read_goto_file()

	try:
		del dirs[name]
	except KeyError:
		fatal("Entry '%s' does not exist." % (name,))

	write_goto_file(dirs)
	print "Entry '%s' removed." % (name,)


def list_directories():
	dirs = read_goto_file()
	print "\n".join(["%s: %s" % n for n in dirs.items()])


def fatal(msg):
	print >> sys.stderr, msg
	sys.exit(1)


def usage():
	fatal("Usage: %s [<fav. name> | list | add <name> <path> | rm <name>]" % (
		sys.argv[0],))


def main():
	argv = sys.argv

	if len(argv) == 4 and argv[1] == "add":
		add_directory(argv[2], argv[3])

	elif len(argv) == 3 and argv[1] == "rm":
		rm_directory(argv[2])

	elif len(argv) == 3 and argv[1] == "get":
		print_directory_by_name(argv[2])

	elif len(argv) == 2 and argv[1] == "list":
		list_directories()

	else:
		usage()


if __name__ == "__main__":
	main()
